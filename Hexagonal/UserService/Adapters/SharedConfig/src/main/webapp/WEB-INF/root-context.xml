<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:security="http://www.springframework.org/schema/security"

       xsi:schemaLocation="
           http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans.xsd
           http://www.springframework.org/schema/context
           http://www.springframework.org/schema/context/spring-context.xsd
           http://www.springframework.org/schema/security
           http://www.springframework.org/schema/security/spring-security.xsd
           ">

    <context:component-scan base-package="pl.lodz.p.user"/>


    <bean id="userService" class="pl.lodz.p.user.core.services.service.UserService">
        <constructor-arg ref="userAdapter"/>
        <constructor-arg ref="userAdapter"/>
        <constructor-arg ref="userAdapter"/>
        <constructor-arg ref="userAdapter"/>
        <constructor-arg ref="jwtTokenProvider"/>
    </bean>

    <bean id="jwtTokenProvider" class="pl.lodz.p.user.core.services.service.JwtTokenProvider"/>
    <bean id="jwsProvider" class="pl.lodz.p.user.rest.controller.JwsProvider"/>
    <bean id="customAuthEntryPoint" class="pl.lodz.p.user.core.services.CustomAuthenticationEntryPoint"/>
    <bean id="jwtFilter" class="security.JwtFilter">
        <constructor-arg ref="jwtTokenProvider"/>
        <constructor-arg ref="userService"/>
    </bean>
    <bean id="authProvider" class="org.springframework.security.authentication.dao.DaoAuthenticationProvider">
        <property name="userDetailsService" ref="userService"/>
        <property name="passwordEncoder">
            <bean class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"/>
        </property>
    </bean>

    <security:http auto-config="true" use-expressions="true" create-session="stateless" entry-point-ref="customAuthEntryPoint">
        <security:csrf disabled="true"/>
        <security:intercept-url pattern="/error" access="permitAll()"/> <!-- for testing remove later -->
        <security:intercept-url pattern="/ping" access="permitAll()"/>
        <security:intercept-url pattern="/health" access="permitAll()"/>
        <security:intercept-url pattern="/me" access="isAuthenticated()"/> <!--for testing remove later -->
        <security:intercept-url pattern="/client" method="POST" access="permitAll"/>
        <security:intercept-url pattern="/client" method="GET" access="hasRole('ADMIN')"/>
        <security:intercept-url pattern="/client/*" method="GET" access="hasRole('ADMIN')"/>
        <security:intercept-url pattern="/client/login" access="permitAll"/>
        <security:intercept-url pattern="/client/activate/*" access="isAuthenticated()"/>
        <security:intercept-url pattern="/client/deactivate/*" access="isAuthenticated()"/>
        <security:intercept-url pattern="/client/findClient/*" access="isAuthenticated()"/>
        <security:intercept-url pattern="/client/findClients/*" access="hasRole('ADMIN')"/>
        <security:intercept-url pattern="/rent" access="isAuthenticated()"/>
        <security:intercept-url pattern="/rent/active" access="hasRole('RESOURCE_MANAGER')"/>
        <security:intercept-url pattern="/rent/archived" access="hasRole('RESOURCE_MANAGER')"/>
        <security:intercept-url pattern="/vmachine" method="POST" access="hasRole('RESOURCE_MANAGER')"/>
        <security:intercept-url pattern="/vmachine" method="PUT" access="hasRole('RESOURCE_MANAGER')"/>
        <security:intercept-url pattern="/vmachine" method="DELETE" access="hasRole('RESOURCE_MANAGER')"/>
        <security:intercept-url pattern="/" access="isAuthenticated()"/>
        <security:custom-filter ref="jwtFilter" before="FORM_LOGIN_FILTER"/>
    </security:http>
    <security:authentication-manager>
        <security:authentication-provider ref="authProvider"/>
    </security:authentication-manager>
</beans>