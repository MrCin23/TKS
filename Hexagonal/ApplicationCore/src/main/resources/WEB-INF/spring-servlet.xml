<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:security="http://www.springframework.org/schema/security"
       xsi:schemaLocation="
        http://www.springframework.org/schema/security
        http://www.springframework.org/schema/security/spring-security.xsd
        http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd">

    <context:component-scan
            base-package="pl.lodz.p" />
<!--    <mvc:default-servlet-handler />-->
    <bean id="viewResolver"
          class="org.springframework.web.servlet.view.UrlBasedViewResolver">
        <property name="viewClass"
                  value="org.springframework.web.servlet.view.JstlView" />
        <property name="prefix" value="/WEB-INF/jsp/" />
        <property name="suffix" value=".jsp" />
    </bean>
    <bean id="validator" class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean"/>
    <bean class="org.springframework.context.support.PropertySourcesPlaceholderConfigurer"/>
    <!--<bean id="postValidator" class="org.springframework.validation.beanvalidation.MethodValidationPostProcessor"/>-->
    <mvc:annotation-driven validator="validator" />
    <bean id="restTemplate" class="org.springframework.web.client.RestTemplate" />
    <bean id="vMachineManager" class="pl.lodz.p.manager.VMachineManager" />
    <bean id="clientManager" class="pl.lodz.p.manager.UserManager" />
    <bean id="rentManager" class="pl.lodz.p.manager.RentManager" />
    <bean id="dataInitializer" class="pl.lodz.p.data.DataInitializer" init-method="init">
        <property name="clientMan" ref="clientManager"/>
        <property name="rentMan" ref="rentManager"/>
        <property name="vmMan" ref="vMachineManager"/>
    </bean>

    <bean id="userService" class="pl.lodz.p.service.implementation.UserService"/>
    <bean id="filter" class="pl.lodz.p.security.JwtFilter"/>
    <bean id="tokenProvider" class="pl.lodz.p.security.JwtTokenProvider"/>
    <bean id="jwsProvider" class="pl.lodz.p.security.JwsProvider"/>
    <bean id="customAuthEntryPoint"
          class="pl.lodz.p.controller.CustomAuthenticationEntryPoint"/>
<!--    -->
    <security:http use-expressions="true" create-session="stateless" entry-point-ref="customAuthEntryPoint">
<!--    <security:http auto-config="true" use-expressions="true" create-session="stateless" entry-point-ref="customAuthEntryPoint">-->
        <security:csrf disabled="true"/>
        <security:intercept-url pattern="/api/client" method="POST" access="permitAll"/>
        <security:intercept-url pattern="/api/client/login" access="permitAll"/>
        <security:intercept-url pattern="/api/client/activate" access="hasRole('ADMIN')"/>
        <security:intercept-url pattern="/api/client/deactivate" access="hasRole('ADMIN')"/>
        <security:intercept-url pattern="/api/rent" access="isAuthenticated()"/>
        <security:intercept-url pattern="/api/rent/active" access="hasRole('RESOURCE_MANAGER')"/>
        <security:intercept-url pattern="/api/rent/archived" access="hasRole('RESOURCE_MANAGER')"/>
        <security:intercept-url pattern="/api/vmachine" method="POST" access="hasRole('RESOURCE_MANAGER')"/>
        <security:intercept-url pattern="/api/vmachine" method="PUT" access="hasRole('RESOURCE_MANAGER')"/>
        <security:intercept-url pattern="/api/vmachine" method="DELETE" access="hasRole('RESOURCE_MANAGER')"/>
<!--        <intercept-url pattern="/auth/register" access="permitAll"/>-->
<!--        <intercept-url pattern="/admin/**" access="hasRole('ADMIN')"/>-->
        <security:intercept-url pattern="/**" access="isAuthenticated()"/>

<!--        <security:entry-point-ref ref="customAuthEntryPoint"/>-->

<!--        <security:access-denied-handler ref="customAccessDeniedHandler"/>-->
        <security:custom-filter ref="jwtFilter" before="FORM_LOGIN_FILTER"/>
    </security:http>

    <bean id="jwtFilter" class="pl.lodz.p.security.JwtFilter"/>
<!--    &lt;!&ndash; Bean dla filtra JWT &ndash;&gt;-->
<!--&lt;!&ndash;    <bean id="jwtFilter" class="pl.lodz.p.security.JwtFilter"/>&ndash;&gt;-->

<!--    &lt;!&ndash; Konfiguracja menedÅ¼era uwierzytelniania &ndash;&gt;-->
    <security:authentication-manager>
        <security:authentication-provider ref="authProvider"/>
    </security:authentication-manager>

    <bean id="authProvider" class="org.springframework.security.authentication.dao.DaoAuthenticationProvider">
        <property name="userDetailsService" ref="userService"/>
        <property name="passwordEncoder">
            <bean class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"/>
        </property>
    </bean>
<!--    <bean class="pl.lodz.p.config.WebConfig"/>-->
<!--    <bean class="org.springframework.config.java"-->
    <!--<bean id="jacksonDatatype" class="com.fasterxml.jackson.datatype.jsr310.JavaTimeModule"/>-->
</beans>
