<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:security="http://www.springframework.org/schema/security"
       xsi:schemaLocation="
        http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/security
        http://www.springframework.org/schema/security/spring-security.xsd">

    <context:component-scan base-package="pl.lodz.p" />

    <bean id="viewResolver"
          class="org.springframework.web.servlet.view.UrlBasedViewResolver">
        <property name="viewClass"
                  value="org.springframework.web.servlet.view.JstlView" />
        <property name="prefix" value="/WEB-INF/jsp/" />
        <property name="suffix" value=".jsp" />
    </bean>
    <bean id="validator" class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean"/>
    <bean class="org.springframework.context.support.PropertySourcesPlaceholderConfigurer"/>
    <bean id="restTemplate" class="org.springframework.web.client.RestTemplate" />
    <bean id="authProvider" class="org.springframework.security.authentication.dao.DaoAuthenticationProvider">
        <property name="userDetailsService" ref="userService"/>
        <property name="passwordEncoder">
            <bean class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"/>
        </property>
    </bean>
    <bean id="passwordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"/>
    <bean id="jwsProvider" class="pl.lodz.p.core.services.security.JwsProvider"/>
    <bean id="customAuthEntryPoint" class="pl.lodz.p.core.services.CustomAuthenticationEntryPoint"/>
    <bean id="jwtFilter" class="pl.lodz.p.core.services.security.JwtFilter"/>

    <security:http auto-config="true" use-expressions="true" create-session="stateless" entry-point-ref="customAuthEntryPoint">
        <security:csrf disabled="true"/>
        <security:intercept-url pattern="/api/client" method="POST" access="permitAll"/>
        <security:intercept-url pattern="/api/client/login" access="permitAll"/>
        <security:intercept-url pattern="/api/client/activate" access="hasRole('ADMIN')"/>
        <security:intercept-url pattern="/api/client/deactivate" access="hasRole('ADMIN')"/>
        <security:intercept-url pattern="/api/rent" access="isAuthenticated()"/>
        <security:intercept-url pattern="/api/rent/active" access="hasRole('RESOURCE_MANAGER')"/>
        <security:intercept-url pattern="/api/rent/archived" access="hasRole('RESOURCE_MANAGER')"/>
        <security:intercept-url pattern="/api/vmachine" method="POST" access="hasRole('RESOURCE_MANAGER')"/>
        <security:intercept-url pattern="/api/vmachine" method="PUT" access="hasRole('RESOURCE_MANAGER')"/>
        <security:intercept-url pattern="/api/vmachine" method="DELETE" access="hasRole('RESOURCE_MANAGER')"/>
        <security:intercept-url pattern="/" access="isAuthenticated()"/>
        <security:custom-filter ref="jwtFilter" before="FORM_LOGIN_FILTER"/>
    </security:http>
    <security:authentication-manager>
        <security:authentication-provider ref="authProvider"/>
    </security:authentication-manager>
    <mvc:annotation-driven validator="validator" />
</beans>
